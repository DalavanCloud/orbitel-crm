<style>
  table.calls td {
    padding: 0 6px;
  }

  table.calls td.date {
    padding-top: 5px;
    font-weight: bold;
  }

  table.calls td.phone {
    font-size: 7pt;
    color: gray;
    padding-left: 1em;
  }

  table.ips td {
    border: 0;
    padding: 0 5px 0 0;
  }

  h3 {
    margin-bottom: 5px;
  }

  div.rarr, div.larr {
    position: relative;
    top: 0.9em;
  }
  div.rarr { float:right }
  div.larr { float:left  }

  table.tlayout > tbody > tr > td {
    padding-top: 1em;
  }

  table.tickets {
    margin-left: 0.2em;
  }

  .tickets_toggler {
    font-weight: normal;
    font-size: 7pt;
    margin-left: 1em;
  }

  h3 img {
    height: 16px;
    width: 16px;
    position: relative;
    top: 2px;
  }

  img#billing-func {
    cursor: pointer;
  }

  th.sep {
    height: 1px;
    margin: 0;
    padding: 0;
  }

  div.photo {
    float: right;
    margin-right: 20px;
    margin-top: 10px;
    border: solid 1px lightgrey;
    padding: 8px;
  }
</style>

<div class="larr"><%= prev_customer_link -%></div>
<div class="rarr"><%= next_customer_link -%></div>

<% if @customer.photo? %>
  <div class="photo">
    <%= image_tag @customer.photo.url(:profile), :class => 'photo' %>
  </div>
<% end %>

<h1><%= h @customer.name %></h1>

<h3>
  Данные абонента
  <%= link_to(
    image_tag('edit.png', :title => 'Редактировать'),
    edit_customer_path(@customer)
  ) if current_user.can_manage?(:customers) %>
</h3>


<table class="t1" style="max-width: 30em">
  <tr>
    <th>имя
    <td><%= h @customer.name %>
  </tr>
  <tr>
    <th>адрес
    <td><%= link_to_address_of @customer %>
  </tr>
  <tr>
    <th>телефон<%= 'ы' if @customer.phones.size > 1 -%>
    <td><%= @customer.phones.map(&:humanize).join("; ") %>
  </tr>
  <tr><th class="sep" colspan="2"></th></tr>
  <tr>
    <th>карма</th>
    <td id="karma"><%= karma_of @customer %></td>
  </tr>
  <% if current_user.is_a?(Admin) && @customer.external_id %>
    <tr><th class="sep" colspan="2"></th></tr>
    <tr style="color:gray">
      <th>external_id</th>
      <td><%= @customer.external_id %>
    </tr>
  <% end %>
  <% unless @customer.comment.blank? %>
    <tr><td colspan="2"><hr width="90%"/></td></tr>
    <tr>
      <th colspan="2">комментарии</th>
    </tr>
    <tr>
      <td colspan="2" style="font-size:120%; padding-left: 0.8em; padding-right: 0.8em">
        <%= auto_link(simple_format(h(@customer.comment))) do |text|
          text.size > 30 ? "#{text[0..20]} .. #{text[-10..-1]}"  : text
        end
        %>
      </td>
    </tr>
  <% end %>
</table>

<table class="tlayout" width="100%"><tr valign="top"><td style="min-width:40%">
  <h3>Данные биллинга
    <% if @customer.external_id %>
      <%= image_tag('icon_expand.gif', :alt => 'Дополнительные функции', :id => 'billing-func') %>

      <%= link_to_remote image_tag('arrow-circle-double.png', :alt => 'reload'),
        :url       => billing_info_customer_path(@customer),
        :update    => 'billing_info',
        :loading   => "$('billing_indicator').show()",
        :complete  => "$('billing_indicator').hide()",
        :html      => { :id => 'reload_binfo' }
      %>
      <%= image_tag 'ajax.gif', :style => 'display:none', :id => 'billing_indicator' %>
    <% end %>
  </h3>
  <div id="billing_info"><%= @binfo %></div>
</div>

</td><td>

  <h3>Данные роутера
    <% if @customer.external_id %>
      <%= link_to_remote image_tag('arrow-circle-double.png', :alt => 'reload'),
        :url       => router_info_customer_path(@customer),
        :update    => 'router_info',
        :loading   => "$('router_indicator').show()",
        :complete  => "$('router_indicator').hide()",
        :html      => { :id => 'reload_rinfo' }
      %>
      <%= image_tag 'ajax.gif', :style => 'display:none', :id => 'router_indicator' %>
    <% end %>
  </h3>
  <div id="router_info"><%= @rinfo %></div>
</div>

</td></tr><tr valign="top"><td>

<h3>Звонки (<%= @calls.blank?? 0 : @calls.size -%>)</h3>

<% if @calls.blank? %>
  нет звонков
<% else %>
  <table class="calls">
    <% @calls.group_by{ |call| call.start_time.to_date }.each do |date,calls| %>
      <tr>
        <td colspan="10" class="date"><%= date_with_mark(date) %></td>
      </tr>
      <% calls.each do |call| %>
        <tr>
          <td class="nobr" style="padding-left:3em"><%= call.start_time.strftime("%H:%M:%S") -%></td>
          <td><%= distance_of_time_in_images(call.duration) if call.duration -%></td>
          <td class="phone"><%= Phone.humanize(call.phone_number) %></td>
        </tr>
      <% end %>
    <% end %>
  </table>
<% end %>

</td><td id="tickets_place">
  <%= render 'tickets',
    :title       => 'Текущие заявки',
    :link_title  => '[все]',
    :link_action => 'all_tickets'
  %>
</td></tr></table>

<%= javascript_tag <<-EOJS
  #{handle_ctrl_arrows}

  if( #{( @customer.external_id && @binfo.blank? ).to_json} )
    Event.observe(window,'load',function(){
      $('reload_binfo').onclick();
      $('reload_rinfo').onclick();
    });
  else if( #{( @customer.external_id && @rinfo.blank? ).to_json} )
    Event.observe(window,'load',function(){
      $('reload_rinfo').onclick();
    });

  // pop-up menu on billing advanced functions

  var myMenuItems = [
    {
      name: 'График трафика',
      className: 'traf-chart',
      href: "#{url_for :action => 'traf', :id => @customer}"
    },{
      separator: true
    }
  ];
EOJS
%>

<%= javascript_tag <<-EOJS if current_user.can_manage?(:customers)
  myMenuItems.push(
    {
      name: 'Коррекция баланса..',
      className: 'correct-bal',
      callback: function() {
        var amount = prompt("Сумма?\\n\\n(может быть отрицательной)");
        if( amount == null ) return;
        amount = parseFloat(amount);
        if( isNaN(amount) || amount.abs() < 0.01 ){ alert("неверная сумма"); return }

        var comment = prompt("Причина коррекции");
        if( !comment ){ alert("Причина должна быть введена"); return }
        comment = comment.replace(/^\s*|\s*$/g,'')
        if( !comment ){ alert("Причина должна быть введена"); return }

        #{ remote_function(
            :url       => { :action => 'billing_correct_balance', :id => @customer },
            :with      => "'amount=' + encodeURIComponent(amount) + '&comment=' + encodeURIComponent(comment)",
            :update    => 'billing_info',
            :loading   => "$('billing_indicator').show()",
            :complete  => "$('billing_indicator').hide()"
        )}
      }
    },{
      separator: true
    }
  );
EOJS
%>

<%= javascript_tag <<-EOJS
  myMenuItems.push(
    {
      name: 'Включить Интернет',
      className: 'inet-on',
      callback: function() {
        #{ remote_function(
            :url       => { :action => 'billing_toggle_inet', :id => @customer, :state => 'on' },
            :update    => 'billing_info',
            :loading   => "$('billing_indicator').show()",
            :complete  => "$('billing_indicator').hide(); $('reload_rinfo').onclick()"
        )}
      }
    },{
      name: 'Выключить Интернет',
      className: 'inet-off',
      callback: function() {
        #{ remote_function(
            :url       => { :action => 'billing_toggle_inet', :id => @customer, :state => 'off' },
            :update    => 'billing_info',
            :loading   => "$('billing_indicator').show()",
            :complete  => "$('billing_indicator').hide(); $('reload_rinfo').onclick()"
        )}
      }
    }
  );

  var m = new Proto.Menu({
    selector:  '#billing-func',
    className: 'jsmenu desktop zzz',
    menuItems: myMenuItems
  });

  if( #{@customer.external_id.to_json} )
    Event.observe('billing-func', 'click', function(ev){
      m.show(ev);
    });


  function router_menu(ev,ip,iface){
    var fake_ev = {stop:function(){}};
    if(ev){
      ev.stop();
      fake_ev.clientX = ev.clientX;
      fake_ev.clientY = ev.clientY;
    } else {
      var offset  = $$('img.router-func')[0].positionedOffset();
      fake_ev.clientX = offset[0] + 5;
      fake_ev.clientY = offset[1] + 5;
    }

    var menu_items = #{Router.menu_items.to_json};
    for(var i=0; i<menu_items.length; i++){
      menu_items[i].href = menu_items[i].href.
        replace('{IP}',ip).
        replace('{IFACE}',iface);
    }

    var menu = new Proto.Menu({
      selector:  '#add-settings-toggler',
      className: 'jsmenu desktop zzz',
      menuItems: menu_items
    });
    menu.show(fake_ev);

  }
EOJS
%>
